{"version":3,"sources":["components/Modal/styles.module.css","components/AlgorithmCard/styles.module.css","containers/Algorithm/styles.module.css","actions/error.js","actions/types.js","actions/functions.js","components/Header/index.js","actions/modal.js","actions/account.js","components/Modal/index.js","components/Login/index.js","components/Register/index.js","components/Alert/index.js","components/AlertTemplate/index.js","components/AlgorithmCard/index.js","containers/Home/index.js","containers/About/index.js","components/Chart/index.js","components/DataLoader/index.js","actions/data.js","components/DataManager/index.js","containers/Algorithm/index.js","actions/algorithm.js","containers/App/index.js","serviceWorker.js","reducers/account.js","reducers/modal.js","reducers/error.js","reducers/algroithm.js","reducers/data.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","errorAlert","msg","errors","dispatch","type","payload","forEach","validationError","jsonRequest","headers","body","config","JSON","stringify","mapDispatchToProps","modalLoginOpen","modalRegisterOpen","logout","connect","state","isAuth","account","email","pagesList","className","exact","to","authUserList","onClick","unauthUserList","id","Modal","status","title","children","footer","close","ref","createRef","CSSTransition","in","timeout","classNames","enter","styles","enterActive","exit","exitActive","unmountOnExit","modalBackdrop","e","target","current","aria-label","aria-hidden","modalLoginClose","login","password","axios","post","then","res","data","catch","error","response","modal","isLoading","useState","setEmail","setPassword","onSubmit","preventDefault","htmlFor","name","onChange","value","disabled","role","register","modalRegisterClose","passwordRepeat","setPasswordRepeat","match","withAlert","alert","useEffect","message","AlertTemplate","style","AlgorithmCard","link","imgLink","description","item","img","src","alt","list","algorithm","Object","values","map","key","imgurl","About","keys","length","chartData","timestampToData","timestamp","date","Date","day","getDate","month","getMonth","year","getFullYear","toString","slice","entries","row","l","o","c","h","width","height","chartType","loader","options","legend","bar","groupWidth","candlestick","fallingColor","strokeWidth","fill","risingColor","rootProps","loadData","resolution","start","end","get","console","log","where","setWhere","which","setWhich","setResolution","setStart","setEnd","parse","backgroundColor","scope","execute","algorithmLink","params","find","isExecuting","result","tableWrapper","Chart","token","isLoaded","loadAlgoList","auth","alertOptions","position","positions","TOP_CENTER","transition","transitions","FADE","containerStyle","zIndex","template","path","component","Home","Algorithm","Boolean","window","location","hostname","initialState","localStorage","getItem","combineReducers","setItem","removeItem","listIndex","i","t","v","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66017013.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"styles_modalBackdrop__1CZNN\",\"enter\":\"styles_enter__w9sIk\",\"enterActive\":\"styles_enterActive__2B6B8\",\"exit\":\"styles_exit__3KfGF\",\"exitActive\":\"styles_exitActive__EvmdU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__GFlt6\",\"item\":\"styles_item__13qb2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__26b6t\",\"tableWrapper\":\"styles_tableWrapper__3fi6T\"};","import { ERROR_MESSAGE } from './types';\n\nexport const errorAlert = ({ msg, errors }) => (dispatch) => {\n  if (msg) {\n    dispatch({ type: ERROR_MESSAGE, payload: msg });\n  }\n  if (errors) {\n    errors.forEach((validationError) => {\n      dispatch({ type: ERROR_MESSAGE, payload: validationError.msg });\n    });\n  }\n};","export const MODAL_LOGIN_OPEN = 'MODAL_LOGIN_OPEN';\nexport const MODAL_LOGIN_CLOSE = 'MODAL_LOGIN_CLOSE';\n\nexport const MODAL_REGISTER_OPEN = 'MODAL_REGISTER_OPEN';\nexport const MODAL_REGISTER_CLOSE = 'MODAL_REGISTER_CLOSE';\n\nexport const ACCOUNT_AUTH_LOADING = 'ACCOUNT_AUTH_LOADING';\nexport const ACCOUNT_AUTH_SUCCESS = 'ACCOUNT_AUTH_SUCCESS';\nexport const ACCOUNT_AUTH_FAIL = 'ACCOUNT_AUTH_FAUL';\n\nexport const ACCOUNT_LOGIN_LOADING = 'ACCOUNT_LOGIN_LOADING';\nexport const ACCOUNT_LOGIN_SUCCESS = 'ACCOUNT_LOGIN_SUCCESS';\nexport const ACCOUNT_LOGIN_FAIL = 'ACCOUNT_LOGIN_FAIL';\n\nexport const ACCOUNT_REGISTER_LOADING = 'ACCOUNT_REGISTER_LOADING';\nexport const ACCOUNT_REGISTER_SUCCESS = 'ACCOUNT_REGISTER_SUCCESS';\nexport const ACCOUNT_REGISTER_FAIL = 'ACCOUNT_REGISTER_FAIL';\n\nexport const ACCOUNT_LOGOUT = 'ACCOUNT_LOGOUT';\n\nexport const ERROR_MESSAGE = 'ERROR_MESSAGE';\n\nexport const ALGO_LIST_LOADING = 'ALGO_LIST_LOADING';\nexport const ALGO_LIST_SUCCESS = 'ALGO_LIST_SUCCESS';\nexport const ALGO_LIST_FAIL = 'ALGO_LIST_FAIL';\n\nexport const ALGO_EXECUTE_LOADING = 'ALGO_EXECUTE_LOADING';\nexport const ALGO_EXECUTE_SUCCESS = 'ALGO_EXECUTE_SUCCESS';\nexport const ALGO_EXECUTE_FAIL = 'ALGO_EXECUTE_FAIL';\n\nexport const DATA_GET_LOADING = 'DATA_LOADING';\nexport const DATA_GET_SUCCESS = 'DATA_SUCCESS';\nexport const DATA_GET_FAIL = 'DATA_FAIL';","export const jsonRequest = (headers, body) => { \n  const config = { headers: { 'Content-Type': 'application/json' } };\n  config.headers = { ...config.headers, ...headers };\n  body = body && JSON.stringify(body);\n  return { config, body };\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/account';\nimport { modalLoginOpen, modalRegisterOpen } from '../../actions/modal';\n\nconst Header = ({ \n  email,\n  isAuth,\n  modalLoginOpen,\n  modalRegisterOpen,\n  logout,\n}) => {\n  const pagesList = (\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" exact to='/'>\n          Home\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" exact to='/about'>\n          About\n        </NavLink>\n      </li>\n    </ul>\n  );\n  const authUserList = (\n    <ul className=\"navbar-nav ml-auto align-items-center\">\n      <li className=\"nav-item mr-3 text-light\">\n        Welcome {email}\n      </li>\n      <li className=\"nav-item\">\n        <button\n          className='nav-link btn btn-info'\n          onClick = {logout}\n        >\n          Logout\n        </button>\n      </li>\n    </ul>\n  ); \n  const unauthUserList = (\n    <ul className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item\">\n        <button\n          className='nav-link btn btn-link'\n          onClick = {modalLoginOpen}\n        >\n          Login\n        </button>\n      </li>\n      <li className=\"nav-item\">\n        <button\n          className='nav-link btn btn-link'\n          onClick = {modalRegisterOpen}\n        >\n          Register\n        </button>\n      </li>\n    </ul>\n  );\n\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand navbar-dark bg-primary\">\n        <div className=\"container\">\n          <div className=\"collapse navbar-collapse\" id=\"navbar\">\n            {pagesList}\n            {isAuth ? authUserList : unauthUserList} \n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.account.isAuth,\n  email: state.account.email,\n});\n\nconst mapDispatchToProps = {\n  modalLoginOpen,\n  modalRegisterOpen,\n  logout,\n};\n\nexport default connect(\n  mapStateToProps, \n  mapDispatchToProps\n)(Header);","import {\n  MODAL_LOGIN_OPEN,\n  MODAL_LOGIN_CLOSE,\n  MODAL_REGISTER_OPEN,\n  MODAL_REGISTER_CLOSE,\n} from './types';\n\nexport const modalLoginOpen = () => (dispatch) => dispatch({\n  type: MODAL_LOGIN_OPEN,\n});\n\nexport const modalLoginClose = () => (dispatch) => dispatch({\n  type: MODAL_LOGIN_CLOSE,\n});\n\nexport const modalRegisterOpen = () => (dispatch) => dispatch({\n  type: MODAL_REGISTER_OPEN,\n});\n\nexport const modalRegisterClose = () => (dispatch) => dispatch({\n  type: MODAL_REGISTER_CLOSE,\n});","import axios from 'axios';\nimport { errorAlert } from './error';\nimport { jsonRequest } from './functions';\nimport {\n  ACCOUNT_AUTH_LOADING,\n  ACCOUNT_AUTH_SUCCESS,\n  ACCOUNT_AUTH_FAIL,\n\n  ACCOUNT_LOGIN_LOADING,\n  ACCOUNT_LOGIN_SUCCESS,\n  ACCOUNT_LOGIN_FAIL,\n\n  ACCOUNT_REGISTER_LOADING,\n  ACCOUNT_REGISTER_SUCCESS,\n  ACCOUNT_REGISTER_FAIL,\n\n  ACCOUNT_LOGOUT,\n\n  MODAL_LOGIN_CLOSE,\n  MODAL_REGISTER_CLOSE\n} from './types';\n\n// GET 'api/account/auth'\nexport const auth = (token) => (dispatch) => {\n  dispatch({ type: ACCOUNT_AUTH_LOADING }); \n  const { config } = jsonRequest({ token });\n  axios\n    .get('/api/account/auth', config)\n    .then((res) => dispatch({ type: ACCOUNT_AUTH_SUCCESS, payload: res.data }))\n    .catch((error) => {\n      dispatch({ type: ACCOUNT_AUTH_FAIL });\n      if (error.response) errorAlert(error.response.data)(dispatch);\n    });\n};\n\n// POST 'api/account/login'\nexport const login = ({ email, password }) => (dispatch) => {\n  dispatch({ type: ACCOUNT_LOGIN_LOADING });\n  const { body, config } = jsonRequest(null, { email, password });\n  axios\n    .post('/api/account/login', body, config)\n    .then((res) => {\n      dispatch({ type: ACCOUNT_LOGIN_SUCCESS, payload: res.data });\n      dispatch({ type: MODAL_LOGIN_CLOSE });\n    })\n    .catch((error) => {\n      dispatch({ type: ACCOUNT_LOGIN_FAIL });\n      if (error.response) errorAlert(error.response.data)(dispatch);\n    });\n};\n\n// POST 'api/account/register'\nexport const register = ({ email, password }) => (dispatch) => {\n  dispatch({ type: ACCOUNT_REGISTER_LOADING });\n  const { body, config } = jsonRequest(null, { email, password });\n  axios\n    .post('/api/account/register', body, config)\n    .then((res) => {\n      dispatch({ \n        type: ACCOUNT_REGISTER_SUCCESS,\n        payload: { ...res.data, email }\n      });\n      dispatch({ type: MODAL_REGISTER_CLOSE });\n    })\n    .catch((error) => { \n      dispatch({ type: ACCOUNT_REGISTER_FAIL });\n      if (error.response) errorAlert(error.response.data)(dispatch);\n    });\n};\n\nexport const logout = () => (dispatch) => dispatch({\n  type: ACCOUNT_LOGOUT,\n});","import React, { createRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './styles.module.css';\n\nconst Modal = ({ status, title, children, footer, close }) => {\n  const ref = createRef();\n  const backdropClose = (e) => e.target === ref.current && close();\n  return (\n    <CSSTransition\n      in={status}\n      timeout={200}\n      classNames={{\n        enter: styles.enter,\n        enterActive: styles.enterActive,\n        exit: styles.exit,\n        exitActive: styles.exitActive,\n      }}\n      unmountOnExit\n    >\n      <div\n        className={styles.modalBackdrop}\n        ref={ref}\n        onClick={backdropClose}\n      >\n        <div className=\"modal-dialog w-100\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              {title &&\n                <h5 className=\"modal-title\">{title}</h5>\n              }\n              <button \n                onClick={close}\n                className=\"close\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              {children}\n            </div>\n            {footer &&\n              <div className=\"modal-footer\">\n                {footer}\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport default Modal;","import React, { useState } from 'react';\nimport Modal from '../Modal';\nimport { connect } from 'react-redux';\nimport { modalLoginClose } from '../../actions/modal';\nimport { login } from '../../actions/account';\n\nconst Login = ({ status, isLoading, modalLoginClose, login }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const onSubmit = (e) => {\n    e.preventDefault();\n    login({ email, password }); \n  };\n\n  return (\n    <Modal\n      status={status}\n      close={modalLoginClose}\n      title=\"Login\"\n    >\n      <form onSubmit={onSubmit}> \n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            name=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            disabled={isLoading}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            name=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            disabled={isLoading}\n          />\n        </div>\n        <div className=\"form-group d-flex justify-content-end mb-0\">\n          <button \n            className=\"btn btn-primary d-flex \n              justify-content-between align-items-center\"\n            disabled={isLoading} \n          >\n            {isLoading && \n              <span \n                className=\"spinner-border spinner-border-sm mr-2\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              >\n              </span>\n            }\n            {!isLoading ? 'Enter' : 'Loading'}\n          </button>\n        </div>\n      </form>\n    </Modal> \n  );\n};\n\nconst mapStateToProps = (state) => ({\n  status: state.modal.login,\n  isLoading: state.account.isLoading,\n});\n\nconst mapDispatchToProps = {\n  modalLoginClose, \n  login,\n};\n\nexport default connect(\n  mapStateToProps, \n  mapDispatchToProps\n)(Login);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../Modal';\nimport { modalRegisterClose } from '../../actions/modal';\nimport { register } from '../../actions/account';\nimport { errorAlert } from '../../actions/error';\n\nconst Register = ({\n  status,\n  isLoading, \n  modalRegisterClose,\n  register,\n  errorAlert,\n  dispatch,\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordRepeat, setPasswordRepeat] = useState('');\n  const match = password === passwordRepeat;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (password !== passwordRepeat) {\n      const error = { msg: 'Пароли не совпадают!' };\n      return errorAlert(error)(dispatch);\n    }\n    register({ email, password });\n  };\n\n  return (\n    <Modal\n      status={status}\n      close={modalRegisterClose}\n      title=\"Register\"\n    >\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            name=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            disabled={isLoading}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            name=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            disabled={isLoading}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"passwordRepeat\">Password Repeat</label>\n          <input\n            type=\"password\"\n            className={`form-control ${!match && \"is-invalid\"}`}\n            name=\"passwordRepeat\"\n            onChange={(e) => setPasswordRepeat(e.target.value)}\n            value={passwordRepeat}\n            disabled={isLoading}\n          />\n        </div>\n        <div className=\"form-group d-flex justify-content-end mb-0\">\n          <button \n            className=\"btn btn-primary d-flex \n              justify-content-between align-items-center\"\n            type=\"submit\"\n            disabled={isLoading} \n          >\n            {isLoading && \n              <span \n                className=\"spinner-border spinner-border-sm mr-2\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              >\n              </span>\n            }\n            {!isLoading ? 'Enter' : 'Loading'}\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  status: state.modal.register,\n  isLoading: state.account.isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  modalRegisterClose: () => modalRegisterClose()(dispatch),\n  register: (value) => register(value)(dispatch),\n  errorAlert,\n  dispatch,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Register);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withAlert } from 'react-alert';\n\nconst Alert = ({ error, alert }) => {\n  useEffect(() => {\n    if (error.message) alert.error(error.message);\n  }, [error, alert]);\n  return <></>;\n};\n\nconst mapStateToProps = (state) => ({\n  error: state.error,\n});\n\nexport default connect(mapStateToProps)(withAlert()(Alert));","import React from 'react';\n\nconst AlertTemplate = ({ style, message, close }) => (\n  <div className=\"alert alert-dismissible alert-warning\" style={style}>\n    <h4 className=\"alert-heading\">Ошибка!</h4>\n    <p className=\"mb-0\">{message}</p>\n    <button type=\"button\" className=\"close\" onClick={close}>&times;</button>\n  </div>\n)\n\nexport default AlertTemplate;","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport styles from './styles.module.css';\n\nconst AlgorithmCard = ({ link, imgLink, title, description }) => (\n  <div \n    className={`card card-body border-primary mb-3 align-items-start \n      ${styles.item}`}\n  >\n    <NavLink className=\"d-flex w-100\" to={link}>\n      <img className={styles.img} src={imgLink} alt=\"Algorithm Preview\" />\n    </NavLink>\n    <NavLink to={link} className=\"mt-3\">\n      <h5 className=\"card-title\">{title}</h5>\n    </NavLink>\n    <p className=\"card-text\">{description}</p>\n  </div>\n);\n\nexport default AlgorithmCard;","import React from 'react';\nimport { connect } from 'react-redux';\nimport AlgorithmCard from '../../components/AlgorithmCard';\n\nconst Home = ({ list }) => {\n  return (\n    <main>\n      <div className=\"container mt-5\">\n        <h1 className=\"mb-4\">List of algorithms</h1>  \n        <div className=\"row\">\n          {list && Object.values(list).map(algorithm => \n            <div key={algorithm.id} className=\"col-sm-6\">\n              <AlgorithmCard\n                title={algorithm.title}\n                link={`algorithm/${algorithm.link}`}\n                imgLink={algorithm.imgurl}\n                description={algorithm.description}\n              />\n            </div>\n          )}\n        </div> \n      </div>\n    </main>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  list: state.algorithm.list,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);","import React from 'react'\n\nconst About = () => (\n  <main>\n    <div className=\"container card border-primary mt-5 pt-4 px-5 pb-2\">\n      <h1 className=\"mb-3\">About</h1>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n      </p>\n    </div> \n  </main>\n);\n\nexport default About;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Chart from 'react-google-charts'\n\nconst ChartWrapper = ({ data }) => {\n  if (Object.keys(data).length === 0) return <>No data!</>;\n\n  const timestampToData = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const day = date.getDate();\n    const month = date.getMonth();\n    const year = date.getFullYear().toString();\n    return `${month}.${day}.${year.slice(-2)}`;\n  };\n\n  let chartData = [['day', 'Low', 'Open', 'Close', 'High']];\n\n  chartData = [\n    ['day', 'Price', 'Open', 'Close', 'High'],\n    ...Object.entries(data).map((row) => {\n      return [\n        timestampToData(row[0]),\n        row[1].l,\n        row[1].o,\n        row[1].c,\n        row[1].h,\n      ]\n    })\n  ]\n\n  const options = {\n    legend: 'none',\n    bar: { groupWidth: '100%' }, // Remove space between bars.\n    candlestick: {\n      fallingColor: { strokeWidth: 0, fill: '#a52714' }, // red\n      risingColor: { strokeWidth: 0, fill: '#0f9d58' }, // green\n    }\n  };\n\n  return (\n    <Chart\n      width={'100%'}\n      height={350}\n      chartType=\"CandlestickChart\"\n      loader={<div>Loading Chart</div>}\n      data={chartData}\n      options={options}\n      rootProps={{ 'data-testid': '1' }}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data.data,\n});\n\nconst mapDispatchToProps = {\n  \n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChartWrapper);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { loadData } from '../../actions/data';\nimport { errorAlert } from '../../actions/error';\n\nconst DataLoader = ({ isLoading, loadData, errorAlert}) => {\n  const [where, setWhere] = useState('finnhub.io');\n  const [which, setWhich] = useState('AAPL');\n  const [resolution, setResolution] = useState('W');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!start || !end) {\n      const error = { msg: 'Укажите даты!' }\n      return errorAlert(error);\n    }\n\n    loadData({ \n      where,\n      resolution,\n      start: Date.parse(start) / 1000, \n      end: Date.parse(end) / 1000, \n    });\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      {/* Where */}\n      <div className=\"form-group\">\n        <label htmlFor=\"where\">Where</label>\n        <input \n          type=\"text\"\n          className=\"form-control\"\n          name=\"where\"\n          onChange={(e) => setWhere(e.target.value)}\n          value={where}\n          disabled={true}\n        />\n      </div>\n\n      {/* Which */}\n      <div className=\"form-group\">\n        <label htmlFor=\"which\">Which</label>\n        <input \n          type=\"text\"\n          className=\"form-control\"\n          name=\"which\"\n          onChange={(e) => setWhich(e.target.value)}\n          value={which}\n          disabled={true}\n        />\n      </div>\n\n      {/* Resolution */}\n      <div className=\"form-group\">\n        <label htmlFor=\"resolution\">Resolution</label>\n        <input \n          type=\"text\"\n          className=\"form-control\"\n          name=\"resolution\"\n          onChange={(e) => setResolution(e.target.value)}\n          value={resolution}\n          disabled={true}\n        />\n      </div>\n\n      {/* From (Start) */}\n      <div className=\"form-group\">\n        <label htmlFor=\"start\">From</label>\n        <input \n          type=\"date\"\n          className=\"form-control\"\n          name=\"start\"\n          onChange={(e) => setStart(e.target.value)}\n          value={start}\n          disabled={isLoading}\n        />\n      </div>\n\n      {/* To (End) */}\n      <div className=\"form-group\">\n        <label htmlFor=\"end\">To</label>\n        <input \n          type=\"date\"\n          className=\"form-control\"\n          name=\"end\"\n          onChange={(e) => setEnd(e.target.value)}\n          value={end}\n          disabled={isLoading}\n        />\n      </div>\n\n      {/* Submit */}\n      <div className=\"form-group d-flex mb-0\">\n        <button\n          className=\"btn btn-primary d-flex \n          justify-content-between align-items-center w-100\"\n          disabled={isLoading} \n        >\n          {isLoading && \n            <span \n              className=\"spinner-border spinner-border-sm mr-2\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            >\n            </span>\n          }\n          <span className=\"ml-auto\">\n            {!isLoading ? 'Load Data' : 'Loading'}\n          </span>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.data.isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadData: (value) => loadData(value)(dispatch),\n  errorAlert: (value) => errorAlert(value)(dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataLoader);","import axios from 'axios';\nimport { errorAlert } from './error';\nimport {\n  DATA_GET_LOADING,\n  DATA_GET_FAIL,\n  DATA_GET_SUCCESS,\n} from './types';\n\nexport const loadData = ({ resolution, start, end }) => (dispatch) => {\n  dispatch({ type: DATA_GET_LOADING });\n  axios\n    .get(`https://finnhub.io/api/v1/stock/candle?symbol=AAPL&resolution=${resolution}&from=${start}&to=${end}&token=bql6il7rh5ra8kpl6eg0`)\n    .then((data) => {\n      dispatch({ type: DATA_GET_SUCCESS, payload: data });\n    })\n    .catch((error) => {\n      console.log(error);\n      dispatch({ type: DATA_GET_FAIL });\n      errorAlert({ msg: 'Ошибка подгрузки данных!' })(dispatch);\n    });\n};","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst DataManager = ({ data }) => {\n  const timestampToData = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const day = date.getDate();\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  };\n\n  return (\n    <table className=\"table table-hover mb-0\">\n      <thead className=\"sticky-top\" style={{backgroundColor: 'white'}}>\n        <tr>\n          <th className=\"border-top-0\" scope=\"col\">Date</th>\n          <th className=\"border-top-0\" scope=\"col\">Open</th>\n          <th className=\"border-top-0\" scope=\"col\">Close</th>\n          <th className=\"border-top-0\" scope=\"col\">High</th>\n          <th className=\"border-top-0\" scope=\"col\">Low</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(data).map((row) => \n          <tr key={row[0].toString()}>\n            <th scope=\"row\">{timestampToData(row[0])}</th>\n            <td>{row[1].o}</td>\n            <td>{row[1].c}</td>\n            <td>{row[1].h}</td>\n            <td>{row[1].l}</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data.data,\n});\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DataManager);","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './styles.module.css';\nimport { execute } from '../../actions/algorithm';\nimport Chart from '../../components/Chart';\nimport DataLoader from '../../components/DataLoader';\nimport DataManager from '../../components/DataManager';\n\nconst Algorithm = ({ \n  list,\n  execute,\n  match,\n}) => {\n  const { algorithmLink } = match.params;\n  const algorithm = list && Object.values(list).find((item) => \n    item.link === algorithmLink);\n\n  if (!algorithm) return <>Error</>;\n\n  const { \n    isExecuting,\n    title,\n    imgurl,\n    description,\n    result,\n    id,\n    link,\n  } = algorithm;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    execute({ id, link });\n  };\n\n  return (\n    <main>\n      <div className=\"container mt-5 mb-4\">\n        {title &&\n          <h1 className=\"mb-4\">{title}</h1> \n        }\n        <div className=\"card card-body border-primary container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 d-flex mb-3 mb-md-0\">\n              <img\n                className={`${styles.img}`}\n                src={imgurl || 'https://i.imgur.com/Bb2evGw.jpg'} \n                alt=\"Algrithm\" \n              />\n            </div>\n            <div className=\"col-md-6\">\n              <p className=\"mb-0\">\n                {description || 'Описание отсутствует.'}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card card-body border-primary\">\n              <h2>Data Loading</h2>\n              <DataLoader />\n            </div>\n          </div>\n\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card card-body border-primary\">\n              <h2>Data Manager</h2>\n              <div className={styles.tableWrapper}>\n                <DataManager />\n              </div> \n            </div>\n          </div>\n\n          <div className=\"col-12 mb-4\">\n            <div className=\"card card-body border-primary\">\n              <h2>Chart</h2> \n              <Chart /> \n            </div>\n          </div>\n          \n\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card card-body border-primary\">\n              <h2 className=\"mb-3\">Execute</h2>\n              <form onSubmit={onSubmit}>\n                <div className=\"form-group d-flex mb-0\">\n                  <button \n                      className=\"btn btn-primary d-flex \n                        justify-content-between align-items-center w-100\"\n                      type=\"submit\"\n                      disabled={isExecuting} \n                    >\n                      {isExecuting && \n                        <span \n                          className=\"spinner-border spinner-border-sm mr-2\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                        >\n                        </span>\n                      }\n                      {!isExecuting ? 'Run' : 'Loading'}\n                    </button>\n                </div>\n              </form>\n            </div>\n          </div>\n\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card card-body border-primary\">\n              <h2 className=\"card-title\">Result</h2>\n              <div>\n                  {result &&\n                    result.data\n                  }\n              </div>\n            </div>\n          </div>\n\n        </div> \n      </div>\n    </main>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  list: state.algorithm.list,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  execute: (value) => execute(value)(dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Algorithm);","import axios from 'axios';\nimport { errorAlert } from './error';\nimport {\n  ALGO_LIST_LOADING,\n  ALGO_LIST_SUCCESS,\n  ALGO_LIST_FAIL,\n\n  ALGO_EXECUTE_LOADING,\n  ALGO_EXECUTE_SUCCESS,\n  ALGO_EXECUTE_FAIL,\n} from './types';\n\n// GET '/api/algorithm/list'\nexport const loadAlgoList = () => (dispatch) => {\n  dispatch({ type: ALGO_LIST_LOADING });\n  axios\n    .get('/api/algorithm/list')\n    .then((res) => dispatch({ type: ALGO_LIST_SUCCESS, payload: res.data }))\n    .catch((error) => {\n      dispatch({ type: ALGO_LIST_FAIL });\n      errorAlert(error.response.data)(dispatch);\n    });\n};\n\n// GET 'api/algorithm/{id}/execute'\nexport const execute = ({ id, link }) => (dispatch) => {\n  dispatch({ type: ALGO_EXECUTE_LOADING, payload: id });\n  axios\n    .get(`/api/algorithm/${link}/execute`)\n    .then((res) => dispatch({ \n      type: ALGO_EXECUTE_SUCCESS, \n      payload: { data: res.data, id: id }\n    }))\n    .catch((error) => {\n      dispatch({ type: ALGO_EXECUTE_FAIL, payload: id });\n      errorAlert(error.response.data)(dispatch);\n    })\n};","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport {\n  positions, \n  transitions,\n  Provider as AlertProvider \n} from 'react-alert';\n\nimport { auth } from '../../actions/account';\nimport { loadAlgoList } from '../../actions/algorithm';\n\n// COMPONENTS\nimport Header from '../../components/Header';\nimport Login from '../../components/Login';\nimport Register from '../../components/Register';\nimport Alert from '../../components/Alert';\nimport AlertTemplate from '../../components/AlertTemplate';\n\n// PAGES\nimport Home from '../Home';\nimport About from '../About';\nimport Algorithm from '../Algorithm';\n\nconst App = ({ token, isAuth, isLoading, isLoaded, loadAlgoList, auth }) => {\n  useEffect(() => {\n    if(token && !isAuth) auth(token);\n  }, [token, auth, isAuth]);\n\n  useEffect(() => {\n    if (!isLoaded && !isLoading) loadAlgoList();\n  });\n\n  const alertOptions = {\n    position: positions.TOP_CENTER,\n    timeout: 5000,\n    transition: transitions.FADE,\n    containerStyle: {\n      zIndex: 1070\n    },\n  };\n\n  return (\n    <AlertProvider template={AlertTemplate} {...alertOptions}>\n      <Router>\n        <Header />\n        <Login />\n        <Register />\n        <Alert />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/algorithm/:algorithmLink\" component={Algorithm} /> \n        </Switch>\n      </Router>\n    </AlertProvider>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  token: state.account.token,\n  isAuth: state.account.isAuth,\n  isLoaded: state.algorithm.isLoaded,\n  isLoading: state.algorithm.isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadAlgoList: () => loadAlgoList()(dispatch),\n  auth: (value) => auth(value)(dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { \n  ACCOUNT_AUTH_LOADING,\n  ACCOUNT_AUTH_SUCCESS,\n  ACCOUNT_AUTH_FAIL,\n\n  ACCOUNT_LOGIN_LOADING,\n  ACCOUNT_LOGIN_SUCCESS,\n  ACCOUNT_LOGIN_FAIL,\n\n  ACCOUNT_REGISTER_LOADING,\n  ACCOUNT_REGISTER_SUCCESS,\n  ACCOUNT_REGISTER_FAIL,\n  ACCOUNT_LOGOUT, \n} from '../actions/types';\n\nconst initialState = {\n  email: null,\n  token: localStorage.getItem('token'),\n  isLoading: false,\n  isAuth: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ACCOUNT_AUTH_LOADING: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n    case ACCOUNT_AUTH_SUCCESS: {\n      return {\n        ...state,\n        ...payload,\n        isLoading: false,\n        isAuth: true,\n      };\n    }\n    case ACCOUNT_AUTH_FAIL: {\n      return {\n        ...state,\n        ...payload, \n        isLoading: false,\n        isAuth: false,\n      };\n    }\n\n    case ACCOUNT_LOGIN_LOADING: {\n      return { \n        ...state, \n        isLoading: true, \n      };\n    }\n    case ACCOUNT_LOGIN_SUCCESS: {\n      localStorage.setItem('token', payload.token);\n      return { \n        ...state, \n        ...payload, \n        isLoading: false, \n        isAuth: true,\n      };\n    }\n    case ACCOUNT_LOGIN_FAIL: { \n      return { \n        ...state,\n        isLoading: false,\n        isAuth: false,\n      };\n    }\n\n    case ACCOUNT_REGISTER_LOADING: {\n      return { \n        ...state,\n        isLoading: true,\n      };\n    }\n    case ACCOUNT_REGISTER_SUCCESS: {\n      localStorage.setItem('token', payload.token);\n      return { \n        ...state,\n        ...payload,\n        isLoading: false,\n        isAuth: false,\n      };\n    }\n    case ACCOUNT_REGISTER_FAIL: {\n      return { \n        ...state,\n        isLoading: false,\n        isAuth: false,\n      };\n    }\n\n    case ACCOUNT_LOGOUT: {\n      localStorage.removeItem('token');\n      return {\n        email: null,\n        token: null,\n        isLoading: false,\n        isAuth: false,\n      };\n    }\n\n    default: {\n      return state;\n    } \n  }\n};","import { \n  MODAL_LOGIN_OPEN,\n  MODAL_LOGIN_CLOSE,\n  MODAL_REGISTER_OPEN,\n  MODAL_REGISTER_CLOSE,\n} from '../actions/types';\n\nconst initialState = {\n  login: false,\n  register: false,\n};\n\nexport default (state = initialState, { type }) => {\n  switch (type) {\n    case MODAL_LOGIN_OPEN: {\n      return { ...state, login: true };\n    }\n    case MODAL_LOGIN_CLOSE: {\n      return { ...state, login: false };\n    }\n    case MODAL_REGISTER_OPEN: {\n      return { ...state, register: true };\n    }\n    case MODAL_REGISTER_CLOSE: {\n      return { ...state, register: false };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { \n  ERROR_MESSAGE,\n} from '../actions/types';\n\nconst initialState = {\n  message: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ERROR_MESSAGE: {\n      return { message: payload };\n    } \n    default: {\n      return state;\n    }\n  }\n};","import {\n  ALGO_LIST_LOADING,\n  ALGO_LIST_SUCCESS,\n  ALGO_LIST_FAIL,\n\n  ALGO_EXECUTE_LOADING,\n  ALGO_EXECUTE_SUCCESS,\n  ALGO_EXECUTE_FAIL,\n} from '../actions/types';\n\nconst initialState = {\n  list: {},\n  isLoading: false,\n  isLoaded: false,\n}\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ALGO_LIST_LOADING: {\n      return {\n        isLoading: true,\n        isLoaded: false,\n      };\n    }\n    case ALGO_LIST_SUCCESS: {\n      const list = payload.map((item) => ({\n        ...item, \n        isExecuting: false,\n        result: {},\n      }));\n      return {\n        ...state,\n        list: { ...list },\n        isLoading: false,\n        isLoaded: true,\n      };\n    }\n    case ALGO_LIST_FAIL: {\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n      };\n    }\n\n    case ALGO_EXECUTE_LOADING: {\n      const listIndex = Object.entries(state.list)\n        .find((item) => item[1].id === payload)[0];\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          [listIndex]: {\n            ...state.list[listIndex],\n            isExecuting: true,\n          }\n        }\n      }\n    }\n    case ALGO_EXECUTE_SUCCESS: {\n      const listIndex = Object.entries(state.list)\n        .find((item) => item[1].id === payload.id)[0];\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          [listIndex]: {\n            ...state.list[listIndex],\n            isExecuting: false,\n            result: payload.data\n          }\n        }\n      }\n    }\n    case ALGO_EXECUTE_FAIL: {\n      const listIndex = Object.entries(state.list)\n        .find((item) => item[1].id === payload)[0];\n      return {\n        ...state,\n        list: {\n          ...state.list,\n          [listIndex]: {\n            ...state.list[listIndex],\n            isExecuting: false,\n          }\n        }\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { \n  DATA_GET_LOADING,\n  DATA_GET_SUCCESS,\n  DATA_GET_FAIL,\n} from '../actions/types';\n\nconst initialState = {\n  list: {},\n  isLoading: false,\n  data: JSON.parse(localStorage.getItem('data')) || {},\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DATA_GET_LOADING: {\n      return {\n        ...state,\n        isLoading: true,\n        data: {},\n      };\n    }\n    case DATA_GET_SUCCESS: {\n      let data = {};\n      for (let i = 0; i < payload.data.t.length; i++) {\n        data = {\n          ...data, \n          [payload.data.t[i]]: { \n            c: payload.data.c[i],\n            h: payload.data.h[i],\n            l: payload.data.l[i],\n            o: payload.data.o[i],\n            v: payload.data.v[i],\n          },\n        };\n      }\n      localStorage.setItem('data', JSON.stringify(data));\n      return {\n        ...state,\n        isLoading: false,\n        data,\n        result: { ...payload },\n      };\n    }\n    case DATA_GET_FAIL: {\n      return {\n        ...state,\n        isLoading: false,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\nimport account from './account';\nimport modal from './modal';\nimport error from './error';\nimport algorithm from './algroithm';\nimport data from './data';\n\nexport default combineReducers({\n  account,\n  modal,\n  error,\n  algorithm,\n  data,\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}