{"version":3,"sources":["actions/modal.js","constants/action-type.js","actions/message.js","constants/message-type.js","components/layout/Header/index.js","actions/account.js","components/layout/Modal/index.js","components/account/Login/index.js","constants/api-url.js","components/account/Registration/index.js","components/alert/Alert/index.js","components/alert/AlertTemplate/index.js","functions/timestamp.js","components/dataset/DataTable/index.js","constants/dataset-column-type.js","functions/algorithm.js","components/pages/Home/index.js","functions/dataset.js","constants/dataset-list-sort-type.js","components/dataset/DatasetList/index.js","actions/dataset.js","components/pages/Algorithm/index.js","components/dataset/LoaderFinhub/index.js","constants/dataset-source-type.js","components/dataset/LoaderCSV/index.js","components/pages/DataPage/index.js","App.js","serviceWorker.js","reducer/account.js","reducer/modal.js","reducer/message.js","reducer/dataset.js","reducer/index.js","store/index.js","index.js","components/layout/Modal/styles.module.css","components/pages/Algorithm/styles.module.css","components/alert/AlertTemplate/styles.module.css","components/dataset/DataTable/styles.module.css","components/pages/Home/styles.module.css","components/dataset/DatasetList/styles.module.css"],"names":["tableOpen","data","type","payload","messageShow","title","text","resMessageShow","msg","errorList","dispatch","forEach","error","param","connect","state","isAuth","account","email","openLogin","openReg","accountLogout","unauthLinks","className","onClick","authLinks","id","exact","to","Modal","status","children","close","ref","dialogStyles","createRef","classNames","enter","styles","enterActive","exit","exitActive","CSSTransition","in","timeout","unmountOnExit","modalBackdrop","e","target","current","content","aria-label","aria-hidden","isLoading","accountLogin","value","password","body","JSON","stringify","axios","post","headers","then","res","catch","err","response","useState","setEmail","setPassword","onSubmit","preventDefault","htmlFor","name","onChange","disabled","role","accountReg","passwordRepeat","setPasswordRepeat","match","message","withAlert","alert","useEffect","success","AlertTemplate","style","color","head","timestampToDate","timestamp","date","Date","day","getDate","month","getMonth","year","getFullYear","DataTable","wrapper","backgroundColor","map","index","scope","key","row","item","algoGetList","a","get","algoGetInfo","link","config","Home","list","setList","isLoaded","setIsLoaded","fetchData","algorithm","img","src","img_url","alt","short_desc","length","slice","finhubToData","dataset","i","t","l","o","c","h","datasetListSort","sortType","sort","b","meta","loaded","Object","values","selected","selectDataset","datasetDelete","candleOpen","wrapped","setSort","sortedList","setSortedList","dataListWrapper","hour","getHours","minute","getMinutes","timestampToDateTime","source","filename","params","algo","setAlgo","loader","loadDataFinhub","resolution","start","end","apiURL","shortid","generate","parseInt","getTime","console","log","which","setWhich","setResolution","setStart","setEnd","parse","datasetUserAdd","setHeaders","setType","setData","setKey","info","setInfo","headrow","setHeadrow","checked","onFileLoaded","fileInfo","_","Array","fill","size","header","col","colIndex","parseFloat","String","DataPage","where","setWhere","candleType","modal","candle","candleState","candleData","rowIndex","token","loginIsOpen","login","isOpen","regIsOpen","reg","tableIsOpen","table","tableHeaders","tableData","tableType","candleStatus","accountAuth","closeLogin","closeReg","tableClose","candleClose","alertOptions","position","positions","TOP_CENTER","transition","transitions","FADE","containerStyle","zIndex","candleOptions","legend","bar","groupWidth","chartArea","left","window","innerWidth","top","bottom","right","width","height","candlestick","fallingColor","strokeWidth","risingColor","template","chartType","options","rootProps","path","component","AlgorithmPage","Boolean","location","hostname","initialState","localStorage","getItem","combineReducers","removeItem","setItem","document","setAttribute","removeAttribute","fromEntries","entries","filter","middleware","thunk","createStore","reducer","composeWithDevTools","applyMiddleware","render","StrictMode","store","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.bad978d5.chunk.js","sourcesContent":["import * as actionType from '../constants/action-type';\n\nexport const openLogin = () => ({\n  type: actionType.MODAL_LOGIN_OPEN,\n});\n\nexport const closeLogin = () => ({\n  type: actionType.MODAL_LOGIN_CLOSE,\n});\n\nexport const openReg = () => ({\n  type: actionType.MODAL_REG_OPEN,\n});\n\nexport const closeReg = () => ({\n  type: actionType.MODAL_REG_CLOSE,\n});\n\nexport const tableOpen = (data) => ({\n  type: actionType.MODAL_TABLE_OPEN,\n  payload: data,\n});\n\nexport const tableClose = () => ({\n  type: actionType.MODAL_TABLE_CLOSE,\n});\n\nexport const candleOpen = (data) => ({\n  type: actionType.MODAL_CANDLE_OPEN,\n  payload: data,\n});\n\nexport const candleClose = () => ({\n  type: actionType.MODAL_CANDLE_CLOSE,\n});","// MODAL\nexport const MODAL_LOGIN_OPEN = 'MODAL_LOGIN_OPEN';\nexport const MODAL_LOGIN_CLOSE = 'MODAL_LOGIN_CLOSE';\n\nexport const MODAL_REG_OPEN = 'MODAL_REG_OPEN';\nexport const MODAL_REG_CLOSE = 'MODAL_REG_CLOSE';\n\nexport const MODAL_TABLE_OPEN = 'MODAL_TABLE_OPEN';\nexport const MODAL_TABLE_CLOSE = 'MODAL_TABLE_CLOSE';\n\nexport const MODAL_CANDLE_OPEN = 'MODAL_CANDLE_OPEN';\nexport const MODAL_CANDLE_CLOSE = 'MODAL_CANDLE_CLOSE';\n\n// MESSAGE\nexport const MESSAGE_SHOW = 'MESSAGE_SHOW';\n\n// ACCOUNT\nexport const ACCOUNT_AUTH_REQUEST = 'ACCOUNT_AUTH_REQUEST';\nexport const ACCOUNT_AUTH_SUCCESS = 'ACCOUNT_AUTH_SUCCESS';\nexport const ACCOUNT_AUTH_FAIL = 'ACCOUNT_AUTH_FAIL';\n\nexport const ACCOUNT_LOGIN_REQUEST = 'ACCOUNT_LOGIN_REQUEST';\nexport const ACCOUNT_LOGIN_SUCCESS = 'ACCOUNT_LOGIN_SUCCESS';\nexport const ACCOUNT_LOGIN_FAIL = 'ACCOUNT_LOGIN_FAIL';\n\nexport const ACCOUNT_REG_REQUEST = 'ACCOUNT_REG_REQUEST';\nexport const ACCOUNT_REG_SUCCESS = 'ACCOUNT_REG_SUCCESS';\nexport const ACCOUNT_REG_FAIL = 'ACCOUNT_REG_FAIL';\n\nexport const ACCOUNT_LOGOUT = 'ACCOUNT_LOGOUT';\n\n// DATA LOADER \nexport const LOADER_GET_REQUEST = 'LOADER_GET_REQUEST';\nexport const LOADER_GET_SUCCESS = 'LOADER_GET_SUCCESS';\nexport const LOADER_GET_FAIL = 'LOADER_GET_FAIL';\n\nexport const DATASET_USER_ADD = 'DATASET_USER_ADD';\n\n// DATASET LIST\nexport const DATASET_SELECT = 'DATASET_SELECT';\nexport const DATASET_DELETE = 'DATASET_DELETE';\nexport const DATASET_SET_SORT = 'DATASET_SET_SORT';","import * as actionType from '../constants/action-type';\nimport * as msgType from '../constants/message-type';\n\nexport const messageShow = ({ type, title, text }) => ({\n  type: actionType.MESSAGE_SHOW,\n  payload: { type, title, text },\n});\n\nexport const resMessageShow = ({ msg, errorList }) => (dispatch) => {\n  if (msg) {\n    dispatch(messageShow({ \n      type: msgType.MESSAGE_ERROR, \n      title: 'Ошибка!', \n      text: msg, \n    }));\n  }\n  if (errorList) {\n    errorList.forEach((error) => {\n      dispatch(messageShow({ \n        type: msgType.MESSAGE_ERROR, \n        title: error.param, \n        text: error.msg, \n      }));\n    });\n  }\n};","export const MESSAGE_ERROR = 'MESSAGE_ERROR';\nexport const MESSAGE_SUCCESS = 'MESSAGE_SUCCESS';","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { openLogin, openReg } from '../../../actions/modal';\nimport { accountLogout } from '../../../actions/account';\n\nconst Header = ({ isAuth, email, openLogin, openReg, accountLogout }) => {\n  const unauthLinks = (\n    <>\n      <li className=\"nav-item\">\n        <button\n          className=\"nav-link btn btn-link\"\n          onClick={openLogin}>\n          Login\n        </button>\n      </li>\n      <li className=\"nav-item\">\n        <button\n          className=\"nav-link btn btn-link\"\n          onClick={openReg}>\n          Registration\n        </button>\n      </li>\n    </>\n  );\n\n  const authLinks = (\n    <>\n      <li className=\"nav-item mr-3 text-light\">\n        Welcome {email}\n      </li>\n      <li className=\"nav-item\">\n        <button\n          className=\"nav-link btn btn-link\"\n          onClick={accountLogout}>\n          Logout\n        </button>\n      </li>\n    </>\n  );\n\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand navbar-dark bg-primary\">\n        <div className=\"collapse navbar-collapse\" id=\"headerNavbar\">\n          <div className=\"container\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/\">Home</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" exact to=\"/datasets\">My Datasets</NavLink>\n              </li>\n            </ul>\n            <ul className=\"navbar-nav ml-auto align-items-center\">\n              {!isAuth ? unauthLinks : authLinks}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.account.isAuth,\n  email: state.account.email,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  openLogin: () => dispatch(openLogin()),\n  openReg: () => dispatch(openReg()),\n  accountLogout: () => dispatch(accountLogout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import axios from 'axios';\nimport { closeLogin, closeReg } from './modal';\nimport { resMessageShow } from './message';\nimport * as actionType from '../constants/action-type';\nimport * as apiURL from '../constants/api-url';\n\nexport const accountAuthRequest = () => ({\n  type: actionType.ACCOUNT_AUTH_REQUEST,\n});\n\nexport const accountAuthSuccess = (data) => ({\n  type: actionType.ACCOUNT_AUTH_SUCCESS,\n  payload: data,\n});\n\nexport const accountAuthFail = () => ({\n  type: actionType.ACCOUNT_AUTH_FAIL,\n});\n\nexport const accountLoginRequest = () => ({\n  type: actionType.ACCOUNT_LOGIN_REQUEST,\n});\n\nexport const accountLoginSuccess = (data) => ({\n  type: actionType.ACCOUNT_LOGIN_SUCCESS,\n  payload: data,\n});\n\nexport const accountLoginFail = () => ({\n  type: actionType.ACCOUNT_LOGIN_FAIL,\n});\n\nexport const accountRegRequest = () => ({\n  type: actionType.ACCOUNT_REG_REQUEST,\n});\n\nexport const accountRegSuccess = (data) => ({\n  type: actionType.ACCOUNT_REG_SUCCESS,\n  payload: data,\n});\n\nexport const accountRegFail = () => ({\n  type: actionType.ACCOUNT_REG_FAIL,\n});\n\nexport const accountLogout = () => ({\n  type: actionType.ACCOUNT_LOGOUT,\n});\n\nexport const accountAuth = ({ token }) => (dispatch) => {\n  dispatch(accountAuthRequest());\n  const config = { headers: { token, } };\n  axios.get(apiURL.ACCOUNT_AUTH, config)\n    .then((res) => {\n      dispatch(accountAuthSuccess(res.data));\n    })\n    .catch((err) => {\n      dispatch(accountAuthFail());\n      dispatch(resMessageShow(err.response.data));\n    });\n};\n\nexport const accountLogin = ({ email, password }) => (dispatch) => {\n  dispatch(accountLoginRequest());\n  const body = JSON.stringify({ email, password });\n  const config = { headers: { 'Content-Type': 'application/json' } };\n  axios.post(apiURL.ACCOUNT_LOGIN, body, config)\n    .then((res) => {\n      dispatch(accountLoginSuccess(res.data));\n      dispatch(closeLogin());\n    })\n    .catch((err) => {\n      dispatch(accountLoginFail());\n      dispatch(resMessageShow(err.response.data));\n    });\n};\n\nexport const accountReg = ({ email, password }) => (dispatch) => {\n  dispatch(accountRegRequest());\n  const body = JSON.stringify({ email, password });\n  const config = { headers: { 'Content-Type': 'application/json' } };\n  axios.post(apiURL.ACCOUNT_REG, body, config)\n    .then((res) => {\n      dispatch(accountRegSuccess(res.data));\n      dispatch(closeReg());\n    })\n    .catch((err) => {\n      dispatch(accountRegFail());\n      dispatch(resMessageShow(err.response.data));\n    });\n};","import React, { createRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './styles.module.css';\n\nconst Modal = ({ status, title, children, close, dialogStyles }) => {\n  const ref = createRef();\n  const backdropClose = (e) => e.target === ref.current && close();\n  const timeout = 200;\n  const classNames = {\n    enter: styles.enter,\n    enterActive: styles.enterActive,\n    exit: styles.exit,\n    exitActive: styles.exitActive,\n  };\n\n  return (\n    <CSSTransition\n      in={status}\n      timeout={timeout}\n      classNames={classNames}\n      unmountOnExit>\n      <div\n        className={styles.modalBackdrop}\n        ref={ref}\n        onClick={backdropClose}> \n        <div className={styles.content}>\n          <div className=\"modal-header\">\n            {title && (\n              <h5 className=\"modal-title\">{title}</h5>\n            )}\n            <button \n              onClick={close}\n              className=\"close\"\n              aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            {children}\n          </div>\n        </div>\n      </div> \n    </CSSTransition>\n  );\n};\n\nexport default Modal;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { accountLogin } from '../../../actions/account';\n\nconst Login = ({ isLoading, accountLogin }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault(); \n    accountLogin({ email, password });\n  };\n\n  return (\n    <form onSubmit={onSubmit}> \n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          name=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          disabled={isLoading} />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          name=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n          disabled={isLoading} />\n      </div>\n      <div className=\"form-group d-flex justify-content-end mb-0\">\n        <button \n          className=\"btn btn-primary d-flex justify-content-between align-items-center\"\n          disabled={isLoading}>\n          {isLoading && (\n            <span \n              className=\"spinner-border spinner-border-sm mr-2\"\n              role=\"status\"\n              aria-hidden=\"true\">\n            </span>\n          )}\n          {!isLoading ? 'Enter' : 'Loading'}\n        </button>\n      </div>\n    </form> \n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.account.isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  accountLogin: (value) => dispatch(accountLogin(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","// ACCOUNT\nexport const ACCOUNT_AUTH = '/api/account/auth';\nexport const ACCOUNT_LOGIN = '/api/account/login';\nexport const ACCOUNT_REG = '/api/account/register';\n\n// ALGORITHM\nexport const ALGO_LIST = '/api/algorithm/list';\nexport const ALGO_ONE = '/api/algorithm/info';\n\n// FINHUB\nexport const FINHUB_GET = ({ resolution, start, end }) => `https://finnhub.io/api/v1/stock/candle?symbol=AAPL&resolution=${resolution}&from=${start}&to=${end}&token=bql6il7rh5ra8kpl6eg0`;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { accountReg } from '../../../actions/account';\nimport { messageShow } from '../../../actions/message';\nimport * as msgType from '../../../constants/message-type';\n\nconst Registration = ({ isLoading, accountReg, messageShow }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordRepeat, setPasswordRepeat] = useState('');\n  const match = password === passwordRepeat;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (password !== passwordRepeat) {\n      const error = { \n        type: msgType.MESSAGE_ERROR,\n        title: 'Ошибка!',\n        text: 'Пароли не совпадают!', \n      };\n      return messageShow(error);\n    }\n    accountReg({ email, password });\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          name=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          disabled={isLoading} />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          name=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n          disabled={isLoading} />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"passwordRepeat\">Password Repeat</label>\n        <input\n          type=\"password\"\n          className={`form-control ${!match && \"is-invalid\"}`}\n          name=\"passwordRepeat\"\n          onChange={(e) => setPasswordRepeat(e.target.value)}\n          value={passwordRepeat}\n          disabled={isLoading} />\n      </div>\n      <div className=\"form-group d-flex justify-content-end mb-0\">\n        <button \n          className=\"btn btn-primary d-flex justify-content-between align-items-center\"\n          type=\"submit\"\n          disabled={isLoading}>\n          {isLoading && (\n            <span \n              className=\"spinner-border spinner-border-sm mr-2\"\n              role=\"status\"\n              aria-hidden=\"true\">\n            </span>\n          )}\n          {!isLoading ? 'Enter' : 'Loading'}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.account.isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  accountReg: (value) => dispatch(accountReg(value)),\n  messageShow: (value) => dispatch(messageShow(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withAlert } from 'react-alert';\nimport * as msgType from '../../../constants/message-type';\n\nconst Alert = ({ message, alert }) => {\n  useEffect(() => {\n    if (!message.type) return;\n    if (message.type === msgType.MESSAGE_ERROR) alert.error(message);\n    if (message.type === msgType.MESSAGE_SUCCESS) alert.success(message);\n  }, [message, alert]);\n  return <></>;\n};\n\nconst mapStateToProps = (state) => ({\n  message: state.message,\n  type: state.message.type,\n  title: state.message.title,\n  text: state.message.text,\n});\n\nexport default connect(mapStateToProps)(withAlert()(Alert));","import React from 'react';\nimport styles from './styles.module.css';\nimport * as msgType from '../../../constants/message-type';\n\nconst AlertTemplate = ({ style, message, close }) => {\n  const color = msgType.MESSAGE_SUCCESS === message.type \n    ? 'alert-success'\n    : 'alert-warning';\n  return (\n    <div className={`alert alert-dismissible ${color}`} style={style}>\n      <h4 className={`alert-heading ${styles.head}`}>\n        {message.title || 'Ошибка!'}\n      </h4>\n      <p className=\"mb-0\">{message.text || ''}</p>\n      <button type=\"button\" className=\"close\" onClick={close}>&times;</button>\n    </div>\n  );\n};\n\nexport default AlertTemplate;","export const timestampToDate = (timestamp) => {\n  let date = new Date(timestamp * 1000);\n  let day = date.getDate();\n  day = day < 10 ? `0${day}` : day;\n  let month = date.getMonth() + 1;\n  month = month < 10 ? `0${month}` : month;\n  let year = date.getFullYear();\n  return `${day}.${month}.${year}`;\n};\n\nexport const timestampToDateTime = (timestamp) => {\n  let date = new Date(timestamp * 1000);\n  let day = date.getDate();\n  day = day < 10 ? `0${day}` : day;\n  let month = date.getMonth() + 1;\n  month = month < 10 ? `0${month}` : month;\n  let year = date.getFullYear();\n  let hour = date.getHours();\n  hour = hour < 10 ? `0${hour}` : hour;\n  let minute = date.getMinutes();\n  minute = minute < 10 ? `0${minute}` : minute;\n  return `${hour}:${minute} ${day}-${month}-${year}`;\n};","import React from 'react';\nimport * as colType from '../../../constants/dataset-column-type';\nimport { timestampToDate } from '../../../functions/timestamp';\nimport styles from './styles.module.css';\n\nconst DataTable = ({ headers, data = [], type = [] }) => {\n  return (\n    <div className={styles.wrapper}>\n      <table className=\"table table-hover mb-0\">\n\n        {headers && (\n          <thead className=\"sticky-top\" style={{backgroundColor: 'white'}}>\n            <tr>\n              {headers.map((value, index) => (\n                <th className=\"border-top-0\" scope=\"col\" key={index}>\n                  <button className=\"btn btn-link text-dark\">\n                    <div>{value}</div>\n                    <div>{type[index] && `[${type[index]}]`}</div>\n                  </button>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        \n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index}>\n              {row.map((item, index) => (\n                <td \n                  className={`${index === 0 ? 'font-weight-bold' : ''}`} \n                  key={index}>\n                  {type[index] === colType.TIMESTAMP ? timestampToDate(item) : item}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n\n      </table>\n    </div>\n  );\n};\n\nexport default DataTable;","export const NUMERIC = 'NUMERIC';\nexport const DATE = 'DATE';\nexport const TIMESTAMP = 'TIMESTAMP';\nexport const STRING = 'STRING';","import axios from 'axios';\nimport { resMessageShow } from '../actions/message';\nimport * as apiURL from '../constants/api-url';\n\nexport const algoGetList = async () => {\n  return await axios.get(apiURL.ALGO_LIST)\n    .then((res) => res.data)\n    .catch((err) => {\n      resMessageShow(err.response.data);\n      return [];\n    });\n};\n\nexport const algoGetInfo = async ({ link }) => {\n  const config = { headers: { link, } };\n  return await axios.get(apiURL.ALGO_ONE, config)\n    .then((res) => res.data)\n    .catch((err) => {\n      resMessageShow(err.response.data);\n      return {};\n    });\n};","import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './styles.module.css';\nimport { algoGetList } from '../../../functions/algorithm';\n\nconst Home = () => {\n  const [list, setList] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setList(await algoGetList());\n      setIsLoaded(true);\n    };\n    if (!isLoaded) fetchData();\n  }, [isLoaded]);\n\n  return (\n    <main>\n      <div className=\"container mt-3\">\n        <div className=\"row\">\n          {list.map((algorithm, index) => (\n            <div className=\"col-md-6 mb-3\" key={index}>\n              <div className=\"card card-body border-primary\">\n                <img className={styles.img} src={algorithm.img_url} alt=\"Algorithm\" />\n                <NavLink to={`/algorithm/${algorithm.link}`}><h5>{algorithm.title}</h5></NavLink>\n                <p className=\"mb-0\">\n                  {algorithm.short_desc.length < 150 ? algorithm.short_desc: `${algorithm.short_desc.slice(0, 150)}...`}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import { timestampToDate } from './timestamp';\nimport * as datasetListSortType from '../constants/dataset-list-sort-type';\n\nexport const finhubToData = (dataset) => {\n  let data = [];\n  for (let i = 0; i < dataset.t.length; i++) {\n    const row = [\n      dataset.t[i], \n      dataset.l[i], \n      dataset.o[i], \n      dataset.c[i], \n      dataset.h[i],\n    ];\n    data = [ ...data, row ];\n  }\n  return data;\n};\n\nexport const finhubToCandle = (dataset, headers) => {\n  let data = [['day', 'Price', 'Open', 'Close', 'High']];\n\n  for (let i = 0; i < dataset.t.length; i++) {\n    const row = [\n      timestampToDate(dataset.t[i]), \n      dataset.l[i], \n      dataset.o[i], \n      dataset.c[i], \n      dataset.h[i], \n    ];\n    data = [...data, row];\n  }\n  return data;\n};\n\nexport const datasetListSort = (list, sortType) => {\n  switch (sortType) {\n    case datasetListSortType.DATASET_DATE_ASC: {\n      return list.sort((a, b) => a.meta.loaded - b.meta.loaded);\n    }\n    case datasetListSortType.DATASET_DATE_DESC: {\n      return list.sort((a, b) => b.meta.loaded - a.meta.loaded);\n    }\n    default: {\n      return list;\n    }\n  }\n};","export const DATASET_DATE_ASC = 'DATASET_DATE_ASC';\nexport const DATASET_DATE_DESC = 'DATASET_DATE_DESC';","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { CSVLink } from \"react-csv\";\nimport { selectDataset, datasetDelete } from '../../../actions/dataset';\nimport { tableOpen, candleOpen } from '../../../actions/modal';\nimport { timestampToDateTime } from '../../../functions/timestamp';\nimport { datasetListSort } from '../../../functions/dataset';\nimport * as sortType from '../../../constants/dataset-list-sort-type';\nimport styles from './styles.module.css';\n\nconst DatasetList = ({ \n  list, \n  selected, \n  selectDataset, \n  datasetDelete, \n  tableOpen,\n  candleOpen,\n  wrapped,\n}) => {\n  const [sort, setSort] = useState(sortType.DATASET_DATE_DESC);\n  const [sortedList, setSortedList] = useState(datasetListSort(list, sort));\n  useEffect(() => {\n    setSortedList(datasetListSort(list, sort));\n  }, [list, sort]);\n\n  return (\n    <>\n      <div className=\"card card-body border-primary mb-3 flex-row align-items-center\">\n        <label className=\"font-weight-bold mb-0\" htmlFor=\"datasetSort\">Sort by:</label> \n        <select \n          className=\"custom-select w-auto ml-3\" \n          id=\"datasetSort\" \n          onChange={(e) => setSort(e.target.value)}>\n          <option value={sortType.DATASET_DATE_DESC}>By Date DESC</option>\n          <option value={sortType.DATASET_DATE_ASC}>By Date ASC</option>\n        </select> \n      </div>\n      <div className={wrapped && styles.dataListWrapper}> \n        {sortedList.length === 0 && <p>No datasets were loaded...</p>} \n        {sortedList.map((dataset) => (\n          <div \n            className=\"card card-body border-primary mb-3 flex-md-row justify-content-between align-items-md-center\" \n            key={dataset.id}>\n\n            <div className=\"d-flex flex-md-column mb-3 mb-md-0\">\n              <div>\n                <span className=\"font-weight-bold\">Loaded: </span> \n                <span>{timestampToDateTime(dataset.meta.loaded)}</span>\n              </div>\n              <div className=\"ml-3 ml-md-0\">\n                <span className=\"font-weight-bold\">Source: </span> \n                <span>{dataset.meta.source}</span>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-6 col-md-auto mb-3 mb-lg-0\">\n                <CSVLink \n                  className=\"btn btn-outline-primary w-100\"\n                  filename={\"dataset.csv\"}\n                  data={[dataset.meta.headers, ...dataset.data]}> \n                  Download\n                </CSVLink>\n              </div>\n              <div className=\"col-6 col-md-auto mb-3 mb-lg-0\">\n                <button \n                  className=\"btn btn-outline-info w-100\"\n                  onClick={() => tableOpen({\n                    headers: dataset.meta.headers,\n                    data: dataset.data,\n                    type: dataset.meta.type,\n                  })}>\n                  View\n                </button>\n              </div>\n              <div className=\"col-6 mb-3 col-md-auto mb-3 mb-lg-0\">\n                <button \n                  className=\"btn btn-outline-info w-100\"\n                  onClick={() => candleOpen({\n                    data: [dataset.meta.headers, ...dataset.data],\n                    type: dataset.meta.type,\n                  })}>\n                  Chart\n                </button>\n              </div>\n              <div className=\"col-6 col-md-auto\">\n                <button \n                  className={`btn w-100 ${selected === dataset.id ? 'btn-success' : 'btn-outline-success'}`}\n                  onClick={() => selectDataset(dataset.id)}>\n                  Select\n                </button>\n              </div>\n              <div className=\"col-6 col-md-auto\">\n                <button \n                  className=\"btn btn-outline-danger w-100\"\n                  onClick={() => datasetDelete(dataset.id)}>\n                  Delete\n                </button>\n              </div>\n            </div>\n\n          </div>\n        ))} \n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  list: Object.values(state.dataset.list),\n  selected: state.dataset.selected,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectDataset: (value) => dispatch(selectDataset(value)),\n  datasetDelete: (value) => dispatch(datasetDelete(value)),\n  tableOpen: (value) => dispatch(tableOpen(value)),\n  candleOpen: (value) => dispatch(candleOpen(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DatasetList);\n","import axios from 'axios';\nimport shortid from 'shortid';\nimport { messageShow } from './message';\nimport { finhubToData } from '../functions/dataset';\nimport * as actionType from '../constants/action-type';\nimport * as apiURL from '../constants/api-url';\nimport * as msgType from '../constants/message-type';\nimport * as colType from '../constants/dataset-column-type';\nimport * as sourceType from '../constants/dataset-source-type';\n\nexport const finhubGetRequest = () => ({\n  type: actionType.LOADER_GET_REQUEST,\n});\n\nexport const finhubGetSuccess = (data) => ({\n  type: actionType.LOADER_GET_SUCCESS,\n  payload: data,\n});\n\nexport const finhubGetFail = () => ({\n  type: actionType.LOADER_GET_FAIL,\n});\n\nexport const selectDataset = (id) => ({\n  type: actionType.DATASET_SELECT,\n  payload: id,\n});\n\nexport const datasetDelete = (id) => ({\n  type: actionType.DATASET_DELETE,\n  payload: id,\n});\n\nexport const datasetUserAdd = (dataset) => ({\n  type: actionType.DATASET_USER_ADD,\n  payload: dataset,\n});\n\nexport const loadDataFinhub = ({ resolution, start, end }) => (dispatch) => {\n  dispatch(finhubGetRequest());\n  axios.get(apiURL.FINHUB_GET({ resolution, start, end }))\n    .then((res) => {\n      const dataset = {\n        id: shortid.generate(), \n        meta: {\n          loaded: parseInt(new Date().getTime() / 1000),\n          headers: ['Data', 'Open', 'Close', 'High', 'Low'],\n          type: [colType.TIMESTAMP, colType.NUMERIC, colType.NUMERIC, colType.NUMERIC, colType.NUMERIC],\n          source: sourceType.FINHUB,\n          key: 0,\n        },\n        data: finhubToData(res.data),\n      };\n      dispatch(finhubGetSuccess(dataset));\n      dispatch(messageShow({ \n        type: msgType.MESSAGE_SUCCESS, \n        title: 'Успех!', \n        text: 'Данные загруженны!'\n      }));\n    })\n    .catch((error) => {\n      dispatch(finhubGetFail());\n      console.log(error);\n      dispatch(messageShow({ \n        type: msgType.MESSAGE_ERROR, \n        title: 'Ошибка!', \n        text: 'Ошибка загрузки данных!'\n      }));\n    });\n};","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport DatasetList from '../../dataset/DatasetList';\nimport { algoGetInfo } from '../../../functions/algorithm';\nimport styles from './styles.module.css';\n\nconst AlgorithmPage = ({ ...props }) => {\n  const { link } = props.match.params;\n  const [algo, setAlgo] = useState({}); \n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setAlgo(await algoGetInfo({ link }));\n      setIsLoaded(true);\n    };\n    if (!isLoaded) fetchData();\n  });\n\n  return (\n    <main>\n      <div className=\"container mt-5 mb-4\">\n        <div className=\"row\">\n\n          <div className=\"col-12 mb-3\">\n            <h1 className=\"mb-3\">{algo.title && algo.title}</h1>\n\n            <div className=\"card card-body border-primary\">\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <img className={styles.img} src={algo.img_url || 'https://i.imgur.com/Bb2evGw.jpg'} alt=\"Algorithm\" />\n                </div>\n                <div className=\"col-6\">\n                  {algo.short_desc ? algo.short_desc : 'Описание отсутствует...'}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-12 mb-3\">\n            <div className=\"card card-body border-primary\">\n              <h2 className=\"mb-3\">List of Datasets</h2>\n              <div className={styles.dataListWrapper}>\n                <DatasetList wrapped={true} />\n              </div> \n            </div>\n          </div>\n\n        </div>\n      </div>\n    </main>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlgorithmPage);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { loadDataFinhub } from '../../../actions/dataset';\nimport { messageShow } from '../../../actions/message';\nimport * as msgType from '../../../constants/message-type';\n\nconst LoaderFinhub = ({ isLoading, messageShow, loadDataFinhub }) => {\n  const [which, setWhich] = useState('AAPL');\n  const [resolution, setResolution] = useState('W');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!start || !end) {\n      return messageShow( {\n        type: msgType.MESSAGE_ERROR,\n        title: 'Ошибка', \n        text: 'Укажите даты!' \n      });\n    }\n    if (!isLoading) loadDataFinhub({\n      resolution,\n      start: Date.parse(start) / 1000, \n      end: Date.parse(end) / 1000, \n    });\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      {/* Which */}\n      <div className=\"form-group\">\n        <label htmlFor=\"which\">Which</label>\n        <input \n          type=\"text\"\n          className=\"form-control\"\n          name=\"which\"\n          onChange={(e) => setWhich(e.target.value)}\n          value={which}\n          disabled={true}\n        />\n      </div>\n\n      {/* Resolution */}\n      <div className=\"form-group\">\n        <label htmlFor=\"resolution\">Resolution</label>\n        <input \n          type=\"text\"\n          className=\"form-control\"\n          name=\"resolution\"\n          onChange={(e) => setResolution(e.target.value)}\n          value={resolution}\n          disabled={true}\n        />\n      </div>\n\n      {/* From (Start) */}\n      <div className=\"form-group\">\n        <label htmlFor=\"start\">From</label>\n        <input \n          type=\"date\"\n          className=\"form-control\"\n          name=\"start\"\n          onChange={(e) => setStart(e.target.value)}\n          value={start}\n          disabled={isLoading}\n        />\n      </div>\n\n      {/* To (End) */}\n      <div className=\"form-group\">\n        <label htmlFor=\"end\">To</label>\n        <input \n          type=\"date\"\n          className=\"form-control\"\n          name=\"end\"\n          onChange={(e) => setEnd(e.target.value)}\n          value={end}\n          disabled={isLoading}\n        />\n      </div>\n\n      {/* Submit */}\n      <div className=\"form-group d-flex mb-0\">\n        <button\n          className=\"btn btn-primary d-flex \n          justify-content-between align-items-center w-100\"\n          disabled={isLoading}>\n          {isLoading && (\n            <span \n              className=\"spinner-border spinner-border-sm mr-2\" \n              role=\"status\" \n              aria-hidden=\"true\">\n            </span>\n          )}\n          <span className=\"ml-auto\">\n            {!isLoading ? 'Load Data' : 'Loading'}\n          </span>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.dataset.loader.isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  messageShow: (value) => dispatch(messageShow(value)),\n  loadDataFinhub: (value) => dispatch(loadDataFinhub(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoaderFinhub);\n","export const FINHUB = 'FINHUB';\nexport const USER_FILE = 'USER_FILE'","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport CSVReader from 'react-csv-reader';\nimport shortid from 'shortid';\nimport { datasetUserAdd } from '../../../actions/dataset';\nimport { tableOpen } from '../../../actions/modal';\nimport { messageShow } from '../../../actions/message';\nimport * as msgType from '../../../constants/message-type';\nimport * as sourceType from '../../../constants/dataset-source-type';\nimport * as columnType from '../../../constants/dataset-column-type';\n\nconst LoaderCSV = ({ messageShow, tableOpen, datasetUserAdd }) => {\n  const [headers, setHeaders] = useState([]);\n  const [type, setType] = useState([]);\n  const [data, setData] = useState([]);\n  const [key, setKey] = useState(null);\n  const [info, setInfo] = useState(null);\n  const [headrow, setHeadrow] = useState(true);\n\n  const onFileLoaded = (data, fileInfo) => {\n    try {\n      setHeaders(headrow ? data[0] : data[0].map((_, i) => `Column ${i}`));\n      setType(Array(data[0].length).fill(columnType.NUMERIC));\n      setData(headrow ? data.slice(1, -1) : data);\n      setInfo(fileInfo);\n      messageShow({\n        type: msgType.MESSAGE_SUCCESS,\n        title: 'Успех!', \n        text: 'Файл успешно загружен!' \n      });\n    } catch(e) {\n      console.log(e)\n      messageShow({\n        type: msgType.MESSAGE_ERROR,\n        title: 'Ошибка!', \n        text: 'Ошибка загрузки файла!' \n      });\n    }\n  };\n\n  const saveDataset = () => {\n    if (!key) {\n      return messageShow({\n        type: msgType.MESSAGE_ERROR,\n        title: 'Ошибка!', \n        text: 'Выберите ключевой столбец!' \n      });\n    }\n    \n    const dataset = {\n      id: shortid.generate(),\n      meta: {\n        source: sourceType.USER_FILE,\n        loaded: parseInt(new Date().getTime() / 1000),\n        headers,\n        type,\n        key,\n      },\n      data: data.map((row) => {\n        return row.map((item, index) => {\n          switch (type[index]) {\n            case columnType.NUMERIC: {\n              return parseFloat(item);\n            }\n            case columnType.DATE: {\n              return parseInt(new Date(item).getTime() / 100);\n            }\n            case columnType.TIMESTAMP: {\n              return parseInt(item);\n            }\n            case columnType.STRING: {\n              return String(item);\n            }\n            default: {\n              return String(item);\n            }\n          }\n        })\n      }),\n    };\n    datasetUserAdd(dataset);\n    messageShow({\n      type: msgType.MESSAGE_SUCCESS,\n      title: 'Успех!', \n      text: 'Набор данных добавлен в библиотеку!' \n    });\n  };\n\n  const deleteDataset = () => {\n    setHeaders([]);\n    setData([]);\n    setKey(null);\n    setInfo(null);\n  };\n\n  return (\n    <div>\n      <div className=\"form-group\">\n        <div className=\"custom-control custom-checkbox\">\n          <input \n            type=\"checkbox\" \n            className=\"custom-control-input\" \n            id=\"customCheck1\" \n            checked={headrow}\n            onChange={() => setHeadrow(!headrow)} />\n          <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n            First row is Header?\n          </label>\n        </div>\n      </div>\n\n      <CSVReader onFileLoaded={onFileLoaded} />\n\n      {info && (\n        <>\n          <h3 className=\"my-3\">Loaded File</h3>\n          <div className=\"card card-body border-primary mt-3 \">\n            <div>\n              <h4>File info:</h4>\n              <div>\n                <span className=\"font-weight-bold\">File Name: </span>\n                <span>{info.name}</span>\n              </div>\n              <div>\n                <span className=\"font-weight-bold\">Size: </span>\n                <span>{info.size} bytes</span>\n              </div>\n              <div className=\"mb-3\">\n                <span className=\"font-weight-bold\">Type: </span>\n                <span>{info.type}</span>\n              </div> \n\n              <h4>Select field types:</h4>\n              <fieldset>\n                {headers.map((header, index) => (\n                  <div \n                    className={`form-group d-flex flex-wrap align-items-sm-center mb-3`} // \n                    key={index}>\n                    <label className=\"mb-3 mb-sm-0 mr-auto\" htmlFor={header}>\n                      <span className=\"font-weight-bold\">{header}</span> type: \n                    </label>\n                    <select \n                      className=\"custom-select w-auto mb-3 mb-sm-0 ml-0 ml-sm-3\" \n                      id={header}\n                      onChange={(e) => setType(type.map((col, colIndex) => {\n                        return colIndex === index ? e.target.value : col;\n                      }))}>\n                      <option value={columnType.NUMERIC}>Numeric</option>\n                      <option value={columnType.DATE}>Data</option>\n                      <option value={columnType.TIMESTAMP}>Timestamp</option>\n                      <option value={columnType.STRING}>Categorial String</option>\n                    </select>\n                    <label className=\"form-check-label pl-4 ml-sm-3\">\n                      <input \n                        type=\"radio\" \n                        className=\"form-check-input\" \n                        name=\"optionsRadios\" \n                        id=\"optionsRadios1\" \n                        value=\"option1\" \n                        checked={key === header}\n                        onChange={() => setKey(header)} />\n                      is key?\n                    </label>\n                  </div>\n                ))}\n              </fieldset>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-6 col-sm-4 mb-3 mb-sm-0\">\n                <button \n                  className=\"btn btn-outline-info w-100\"\n                  onClick={() => tableOpen({data, headers})}>\n                  View\n                </button>\n              </div>\n              <div className=\"col-6 col-sm-4 mb-3 mb-sm-0\">\n                <button \n                  className=\"btn btn-outline-primary w-100\"\n                  onClick={saveDataset}>\n                  Save\n                </button>\n              </div>\n              <div className=\"col-12 col-sm-4\">\n                <button \n                  className=\"btn btn-outline-danger w-100\"\n                  onClick={deleteDataset}>\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  \n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  messageShow: (value) => dispatch(messageShow(value)),\n  tableOpen: (value) => dispatch(tableOpen(value)),\n  datasetUserAdd: (value) => dispatch(datasetUserAdd(value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoaderCSV);\n","import React, { useState } from 'react';\nimport LoaderFinhub from '../../dataset/LoaderFinhub';\nimport LoaderCSV from '../../dataset/LoaderCSV';\nimport DatasetList from '../../dataset/DatasetList';\nimport * as sourceType from '../../../constants/dataset-source-type';\n\nconst DataPage = () => {\n  const [where, setWhere] = useState(sourceType.USER_FILE);\n\n  return (\n    <main>\n      <div className=\"container mt-3\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-6 mb-3\">\n            <div className=\"card card-body border-primary h-100\">\n              <h2>User Guide to Load Data</h2>\n              <p>To load data use form...</p>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6 mb-3\">\n            <div className=\"card card-body border-primary\">\n              <h2>Data Loader</h2>\n              <div className=\"form-group\">\n                <label htmlFor=\"where\">Where</label>\n                <select \n                  className=\"custom-select\" \n                  id=\"where\" \n                  value={where}\n                  onChange={(e) => setWhere(e.target.value)}>\n                  <option value={sourceType.USER_FILE}>My CSV File</option>\n                  <option value={sourceType.FINHUB}>finhub.com</option>\n                </select>  \n              </div>\n              {where === sourceType.FINHUB && <LoaderFinhub />}\n              {where === sourceType.USER_FILE && <LoaderCSV />}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <h2>Loaded datasets</h2>\n        <DatasetList />\n      </div>\n    </main>\n  )\n}\n\nexport default DataPage;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\n\nimport Header from './components/layout/Header';\nimport Modal from './components/layout/Modal';\n\nimport Login from './components/account/Login';\nimport Registration from './components/account/Registration';\n\nimport Alert from './components/alert/Alert';\nimport AlertTemplate from './components/alert/AlertTemplate';\n\nimport DataTable from './components/dataset/DataTable';\nimport Chart from 'react-google-charts';\n\nimport Home from './components/pages/Home';\nimport AlgorithmPage from './components/pages/Algorithm';\nimport DataPage from './components/pages/DataPage';\n\nimport { accountAuth } from './actions/account';\nimport { closeLogin, closeReg, tableClose, candleClose } from './actions/modal';\nimport { timestampToDate } from './functions/timestamp';\n\nimport * as colType from './constants/dataset-column-type';\n\nconst App = ({\n  isAuth,\n  token,\n  accountAuth,\n\n  loginIsOpen,\n  closeLogin,\n\n  regIsOpen,\n  closeReg,\n\n  tableIsOpen,\n  tableClose,\n  tableHeaders,\n  tableData,\n  tableType,\n\n  candleStatus,\n  candleClose,\n  candleData,\n}) => {\n  const alertOptions = {\n    position: positions.TOP_CENTER,\n    timeout: 5000,\n    transition: transitions.FADE,\n    containerStyle: {\n      zIndex: 1070\n    },\n  };\n  \n  const candleOptions = {\n    legend: 'none',\n    bar: { groupWidth: '100%' },\n    chartArea: {\n      left: window.innerWidth <= 760 ? 30 : 50,\n      top: 10, \n      bottom: 40,\n      right: 10,\n      width:'100%',\n      height:'100%'\n    },\n    candlestick: {\n      fallingColor: { strokeWidth: 0, fill: '#a52714' }, \n      risingColor: { strokeWidth: 0, fill: '#0f9d58' }, \n    },\n  };\n\n  useEffect(() => {\n    if (!isAuth && token) accountAuth({ token });\n  }, [isAuth, token, accountAuth]);\n\n  return (\n    <AlertProvider template={AlertTemplate} {...alertOptions}>\n      <Router>\n\n        <Header />\n\n        <Modal\n          title=\"Login\"\n          status={loginIsOpen}\n          close={closeLogin}>\n          <Login />\n        </Modal>\n\n        <Modal\n          title=\"Registration\"\n          status={regIsOpen}\n          close={closeReg}>\n          <Registration />\n        </Modal>\n\n        <Modal\n          title=\"Dataset\"\n          status={tableIsOpen}\n          close={tableClose}>\n          <DataTable \n            headers={tableHeaders}\n            data={tableData}\n            type={tableType} />\n        </Modal>\n\n        <Modal\n          status={candleStatus}\n          title=\"Candle Chart\"\n          close={candleClose}>\n          <Chart \n            width={'calc(80vw - 60px)'}\n            height={'100%'}\n            chartType=\"CandlestickChart\"\n            loader={<div>Loading Chart</div>}\n            data={candleData}\n            options={candleOptions}\n            rootProps={{ 'data-testid': '1' }} />\n        </Modal>\n\n        <Alert />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/algorithm/:link\" component={AlgorithmPage} />\n          <Route path=\"/datasets/\" component={DataPage} />\n        </Switch>\n\n      </Router>\n    </AlertProvider>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const candleType = state.modal.candle.type;\n  const candleState = state.modal.candle.data;\n  const candleData = candleState ? candleState.map((row, rowIndex) => {\n    if (rowIndex === 0) return row;\n    return row.map((item, index) => {\n      return candleType[index] === colType.TIMESTAMP ? timestampToDate(item) : item\n    });\n  }) : [];\n\n  return {\n    isAuth: state.account.isAuth,\n    token: state.account.token,\n\n    loginIsOpen: state.modal.login.isOpen,\n    regIsOpen: state.modal.reg.isOpen,\n\n    tableIsOpen: state.modal.table.isOpen,\n    tableHeaders: state.modal.table.headers,\n    tableData: state.modal.table.data,\n    tableType: state.modal.table.type,\n\n    candleStatus: state.modal.candle.isOpen,\n    candleData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  accountAuth: (value) => dispatch(accountAuth(value)),\n  closeLogin: () => dispatch(closeLogin()),\n  closeReg: () => dispatch(closeReg()),\n  tableClose: () => dispatch(tableClose()),\n  candleClose: () => dispatch(candleClose()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionType from '../constants/action-type';\n\nconst initialState = {\n  email: null,\n  token: localStorage.getItem('token'),\n  isLoading: false,\n  isAuth: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionType.ACCOUNT_AUTH_REQUEST: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n    case actionType.ACCOUNT_AUTH_SUCCESS: {\n      return {\n        ...state,\n        ...payload,\n        isLoading: false,\n        isAuth: true,\n      };\n    }\n    case actionType.ACCOUNT_AUTH_FAIL: {\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        ...payload, \n        isLoading: false,\n        isAuth: false,\n      };\n    }\n\n    case actionType.ACCOUNT_LOGIN_REQUEST: {\n      return { \n        ...state, \n        isLoading: true, \n      };\n    }\n    case actionType.ACCOUNT_LOGIN_SUCCESS: {\n      localStorage.setItem('token', payload.token);\n      return { \n        ...state, \n        ...payload, \n        isLoading: false, \n        isAuth: true,\n      };\n    }\n    case actionType.ACCOUNT_LOGIN_FAIL: { \n      return { \n        ...state,\n        isLoading: false,\n        isAuth: false,\n      };\n    }\n\n    case actionType.ACCOUNT_REG_REQUEST: {\n      return { \n        ...state,\n        isLoading: true,\n      };\n    }\n    case actionType.ACCOUNT_REG_SUCCESS: {\n      localStorage.setItem('token', payload.token);\n      return { \n        ...state,\n        ...payload,\n        isLoading: false,\n        isAuth: true,\n      };\n    }\n    case actionType.ACCOUNT_REG_FAIL: {\n      return { \n        ...state,\n        isLoading: false,\n        isAuth: false,\n      };\n    }\n\n    case actionType.ACCOUNT_LOGOUT: {\n      localStorage.removeItem('token');\n      return {\n        email: null,\n        token: null,\n        isLoading: false,\n        isAuth: false,\n      };\n    }\n\n    default: {\n      return state;\n    } \n  }\n};","import * as actionType from '../constants/action-type';\n\nconst initialState = {\n  login: {\n    isOpen: false,\n  },\n  reg: {\n    isOpen: false,\n  },\n  table: {\n    isOpen: false,\n    headers: [],\n    data: [],\n    type: [],\n  },\n  candle: {\n    isOpen: false,\n    data: [],\n    type: [],\n  }\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    // LOGIN\n    case actionType.MODAL_LOGIN_OPEN: {\n      document.body.setAttribute('style', 'overflow: hidden;');\n      return {\n        ...state,\n        login: { \n          isOpen: true,\n        },\n      };\n    }\n    case actionType.MODAL_LOGIN_CLOSE: {\n      document.body.removeAttribute('style');\n      return {\n        ...state,\n        login: { \n          isOpen: false,\n        },\n      };\n    }\n\n    // REGISTRATION\n    case actionType.MODAL_REG_OPEN: {\n      document.body.setAttribute('style', 'overflow: hidden;');\n      return {\n        ...state,\n        reg: { \n          isOpen: true,\n        },\n      };\n    }\n    case actionType.MODAL_REG_CLOSE: {\n      document.body.removeAttribute('style');\n      return {\n        ...state,\n        reg: { \n          isOpen: false,\n        },\n      };\n    }\n\n    // DATASET TABLE\n    case actionType.MODAL_TABLE_OPEN: {\n      document.body.setAttribute('style', 'overflow: hidden;');\n      return {\n        ...state,\n        table: {\n          ...state.table,\n          isOpen: true,\n          headers: payload.headers,\n          data: payload.data,\n          type: payload.type,\n        },\n      };\n    }\n    case actionType.MODAL_TABLE_CLOSE: {\n      document.body.removeAttribute('style');\n      return {\n        ...state,\n        table: {\n          ...state.table,\n          isOpen: false,\n        },\n      };\n    }\n\n    // DATASET CANDLE\n    case actionType.MODAL_CANDLE_OPEN: {\n      document.body.setAttribute('style', 'overflow: hidden;');\n      return {\n        ...state,\n        candle: {\n          isOpen: true,\n          data: payload.data,\n          type: payload.type,\n        },\n      };\n    }\n    case actionType.MODAL_CANDLE_CLOSE: {\n      document.body.removeAttribute('style');\n      return {\n        ...state,\n        candle: {\n          ...state.candle,\n          isOpen: false,\n        },\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import * as actionType from '../constants/action-type';\n\nconst initialState = {\n  type: null,\n  title: null,\n  text: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch(type) {\n    case actionType.MESSAGE_SHOW: {\n      return {\n        ...state,\n        ...payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}","import * as actionType from '../constants/action-type';\n\nconst initialState = () => {\n  let list = localStorage.getItem('datasetlist');\n  list = list ? JSON.parse(list) : {};\n  return {\n    list,\n    loader: {\n      isLoading: false,\n    },\n    selected: null,\n  };\n};\n  \n\nexport default (state = initialState(), { type, payload }) => {\n  switch (type) {\n    case actionType.LOADER_GET_REQUEST: {\n      return {\n        ...state,\n        loader: {\n          isLoading: true,\n        },\n      };\n    }\n    case actionType.LOADER_GET_SUCCESS: {\n      const list = {\n        ...state.list,\n        [payload.id]: { ...payload },\n      };\n      localStorage.setItem('datasetlist', JSON.stringify(list));\n      return {\n        ...state,\n        list,\n        loader: {\n          isLoading: false,\n        }\n      };\n    }\n    case actionType.LOADER_GET_FAIL: {\n      return {\n        ...state,\n        loader: {\n          isLoading: false,\n        }\n      };\n    }\n\n    case actionType.DATASET_USER_ADD: {\n      const list = { ...state.list, [payload.id]: { ...payload }, };\n      localStorage.setItem('datasetlist', JSON.stringify(list));\n      return {\n        ...state,\n        list,\n      };\n    }\n\n    case actionType.DATASET_SELECT: {\n      return {\n        ...state,\n        selected: payload, \n      };\n    }\n    case actionType.DATASET_DELETE: {\n      const list = Object.fromEntries(Object.entries(state.list)\n        .filter((dataset) => dataset[0] !== String(payload)));\n      localStorage.setItem('datasetlist', JSON.stringify(list));\n      return {\n        ...state,\n        list,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\nimport account from './account';\nimport modal from './modal';\nimport message from './message';\nimport dataset from './dataset';\n\nexport default combineReducers({\n  account,\n  modal,\n  message,\n  dataset,\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducer';\n\nconst middleware = [thunk];\n\nexport default createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"styles_modalBackdrop__1o0df\",\"enter\":\"styles_enter__1MI-7\",\"enterActive\":\"styles_enterActive__1wmtD\",\"exit\":\"styles_exit__bxuMF\",\"exitActive\":\"styles_exitActive__-gMXE\",\"content\":\"styles_content__2OeAH\",\"autoWidth\":\"styles_autoWidth__nD1gr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__3lJR2\",\"tableWrapper\":\"styles_tableWrapper__cD1_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"styles_head__seqRh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__1UeMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__1u5eJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataListWrapper\":\"styles_dataListWrapper__3pVFE\"};"],"sourceRoot":""}